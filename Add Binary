#include <iostream>
#include <string>
using namespace std;

class Solution {
public:
    string addBinary(string a, string b) {
        // Make both strings of equal length by prepending zeros
        if (a.size() > b.size()) {
            b = string(a.size() - b.size(), '0') + b;
        } else if (a.size() < b.size()) {
            a = string(b.size() - a.size(), '0') + a;
        }
        
        string result(a.size(), '0'); // Initialize result string with zeros
        bool carry = false; // Initialize carry to false
        
        // Iterate from the last character to the first
        for (int i = a.size() - 1; i >= 0; --i) {
            int sum = carry; // Start with the carry
            sum += (a[i] - '0') + (b[i] - '0'); // Convert char to int and add
            
            // Determine the resulting bit and the new carry
            result[i] = (sum % 2) + '0'; // Current bit
            carry = sum / 2; // Update carry
        }
        
        // If there's a carry left, prepend it to the result
        if (carry) {
            result = '1' + result;
        }
        
        return result;
    }
};

int main() {
    Solution sol;
    string a = "1010";
    string b = "1011";
    cout << sol.addBinary(a, b) << endl; // Output should be "10101"

    return 0;
}
